/**
 * @file main.cpp
 * @author tnknguyen_ (nguyenngockhoitran@gmail.com)
 * @date 02-03-2024
 * 
 * @copyright Copyright (c) 2024
 * https://cses.fi/problemset/task/1746
 */

#include <bits/stdc++.h>
using namespace std;
#define endl '\n' 

const int sz = 1e5 + 5;
const int mod = 1e9 + 7;
long long f[sz][105], a[sz];
// dp[i][v] = number of ways to fill the array up to index i, if x[i] = v.

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    // freopen("main.inp","r",stdin);
    // freopen("main.out","w",stdout);

    int n, m;
    cin>>n>>m;

    for(int i=1;i<=n;++i){
        cin>>a[i];
    }

    if(a[1] == 0){
        for(int i=1;i<=m;++i){
            f[1][i] = 1;
        }
    }
    else{
        f[1][a[1]] = 1;
    }

    for(int i=2;i<=n;++i){
        if(a[i] == 0){ //any value from 1 to m
            for(int j=1;j<=m;++j){
                if(j-1 >= 1){
                    f[i][j] = (f[i][j] + f[i-1][j-1]) % mod;
                }
                f[i][j] = (f[i][j] + f[i-1][j]) % mod;
                if(j+1 <= m){
                    f[i][j] = (f[i][j] + f[i-1][j+1]) % mod;
                }
            }
        }
        else{
            int j = a[i];
            if(j-1 >= 1){
                f[i][j] = (f[i][j] + f[i-1][j-1]) % mod;
            }
            f[i][j] = (f[i][j] + f[i-1][j]) % mod;
            if(j+1 <= m){
                f[i][j] = (f[i][j] + f[i-1][j+1]) % mod;
            }
        }
    }

    long long ans = 0;
    for(int i=1;i<=m;++i){
        ans = (ans + f[n][i]) % mod;
    }
    cout<<ans;

    return 0;
}
