#include <bits/stdc++.h>
using namespace std;
#define endl '\n' 

const int mod = 1e9 + 7;
const int sz = 1e6 + 5;
long long f[sz];

long long phi(long long n){
    long long ans = n;
    for(int i=2;i*i<=n;++i){
        if(n % i == 0){
            while(n % i == 0){
                n /= i;
            }
            ans -= (ans / i);
        }
    }

    if(n > 1){
        ans -= (ans / n);
    }

    return ans;
}

long long bin_pow(long long a, long long b){
    long long ans = 1;
    while(b){
        if(b & 1){
            ans = (ans * a) % mod;
        }
        a = (a % mod) * (a % mod) % mod;
        b >>= 1;
    }

    return ans;
}

long long inv_mod(long long x){
    return bin_pow(x, phi(mod)-1);
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    // freopen("main.inp","r",stdin);
    // freopen("main.out","w",stdout);

    long long n, s;
    cin>>n;

    s = n * (n + 1) / 2;
    if(s & 1){
        cout<<0;
        return 0;
    }

    s /= 2;
    f[0] = 1;
    for(int i=1;i<=n;++i){
        for(int j=s;j>=i;--j){
            f[j] = (f[j] + f[j - i]) % mod;
        }
    }

    cout<<(f[s] * inv_mod(2)) % mod<<endl;

    return 0;
}
